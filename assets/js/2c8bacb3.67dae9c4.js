"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[109],{10439:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates an input object with the specified [Enum.KeyCode].\\n\\t","params":[{"name":"key","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"static","source":{"line":44,"path":"src/init.lua"}},{"name":"onTriggered","desc":"Sets the callback to be ran when the input key is pressed.\\n\\t","params":[{"name":"callback","desc":"","lua_type":"(Player | nil) -> ()"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":65,"path":"src/init.lua"}},{"name":"disconnect","desc":"Disconnects the input connection if it was set with [Input:setCallback].\\n\\t","params":[],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":94,"path":"src/init.lua"}},{"name":"reconnect","desc":"Reconnects the input connection if the callback was already set with [Input:setCallback].\\n\\t","params":[],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":106,"path":"src/init.lua"}}],"properties":[{"name":"key","desc":"The [Enum.KeyCode] given with [Input.new].\\n\\t\\t","lua_type":"Enum.KeyCode","source":{"line":56,"path":"src/init.lua"}},{"name":"callback","desc":"The callback set with [Input:setCallback].\\n\\t\\t","lua_type":"(Player | nil) -> ()","source":{"line":74,"path":"src/init.lua"}},{"name":"connection","desc":"The connection created in [Input:setCallback].\\n\\t\\t","lua_type":"RBXScriptConnection","source":{"line":82,"path":"src/init.lua"}}],"types":[],"name":"Input","desc":"Used to create and handle input connections.\\n\\n:::info\\nThe [Input] class is chained, meaning it returns itself. That means you can do things like this.\\n\\n```lua\\nlocal input = Input.new(Enum.KeyCode.E)\\n:setCallback(print)\\n:disconnect()\\n:reconnect()\\n```\\n:::","source":{"line":26,"path":"src/init.lua"}}')}}]);