"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[109],{10439:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates an input object with the specified [Enum.KeyCode].\\n\\t","params":[{"name":"key","desc":"","lua_type":"Enum.KeyCode"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"static","source":{"line":46,"path":"src/init.lua"}},{"name":"onBegan","desc":"Sets the callback to be ran when the input key is pressed.\\n\\t","params":[{"name":"callback","desc":"","lua_type":"callback"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":74,"path":"src/init.lua"}},{"name":"onEnd","desc":"Sets the callback to be ran when the input key is let go.\\n\\t","params":[{"name":"callback","desc":"","lua_type":"callback"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":101,"path":"src/init.lua"}},{"name":"setTimeout","desc":"Sets a timeout in between key presses for [Input:onBegan].\\n\\t","params":[{"name":"amount","desc":"","lua_type":"number"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":128,"path":"src/init.lua"}},{"name":"disconnect","desc":"Disconnects either of the input connections created with [Input:onBegan] or [Input:onEnd] depending on the type argument.\\n\\t","params":[{"name":"type","desc":"","lua_type":"Enum.UserInputState"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":154,"path":"src/init.lua"}},{"name":"reconnect","desc":"Reconnects either of the input connections created with [Input:onBegan] or [Input:onEnd] depending on the type argument.\\n\\t","params":[{"name":"type","desc":"","lua_type":"Enum.UserInputState"}],"returns":[{"desc":"","lua_type":"Input"}],"function_type":"method","source":{"line":170,"path":"src/init.lua"}}],"properties":[{"name":"proximityPrompt","desc":"The [ProximityPrompt] created with [Input.new].\\n\\t\\t","lua_type":"ProximityPrompt","source":{"line":58,"path":"src/init.lua"}},{"name":"key","desc":"The [Enum.KeyCode] given with [Input.new].\\n\\t\\t","lua_type":"Enum.KeyCode","source":{"line":65,"path":"src/init.lua"}},{"name":"beganCallback","desc":"The callback set with [Input:onBegan].\\n\\t\\t","lua_type":"(Player | nil) -> ()","source":{"line":83,"path":"src/init.lua"}},{"name":"beganConnection","desc":"The connection created in [Input:onBegan].\\n\\t\\t","lua_type":"RBXScriptConnection","source":{"line":91,"path":"src/init.lua"}},{"name":"endCallback","desc":"The callback set with [Input:onEnd].\\n\\t\\t","lua_type":"(Player | nil) -> ()","source":{"line":110,"path":"src/init.lua"}},{"name":"endConnection","desc":"The connection created in [Input:onEnd].\\n\\t\\t","lua_type":"RBXScriptConnection","source":{"line":118,"path":"src/init.lua"}}],"types":[],"name":"Input","desc":"Used to create and handle input connections.\\n\\n:::info\\nThe [Input] class is chained, meaning it returns itself. That means you can do things like this.\\n\\n```lua\\nlocal input = Input.new(Enum.KeyCode.E)\\n:onBegan(print)\\n:onEnd(warn)\\n```\\n:::","source":{"line":28,"path":"src/init.lua"}}')}}]);